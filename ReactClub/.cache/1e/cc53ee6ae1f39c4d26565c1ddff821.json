{"id":"node_modules/autosuggest-highlight/match/index.js","dependencies":[{"name":"/Users/manasibhogawar/Desktop/CSUEB_Manasi/WebSystems/assignment-manasisb/ReactClub/package.json","includedInParent":true,"mtime":1588704124356},{"name":"/Users/manasibhogawar/Desktop/CSUEB_Manasi/WebSystems/assignment-manasisb/ReactClub/node_modules/autosuggest-highlight/package.json","includedInParent":true,"mtime":1588743199705},{"name":"diacritic","loc":{"line":1,"column":31},"parent":"/Users/manasibhogawar/Desktop/CSUEB_Manasi/WebSystems/assignment-manasisb/ReactClub/node_modules/autosuggest-highlight/match/index.js","resolved":"/Users/manasibhogawar/Desktop/CSUEB_Manasi/WebSystems/assignment-manasisb/ReactClub/node_modules/diacritic/diacritics.js"}],"generated":{"js":"var removeDiacritics = require('diacritic').clean;\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_special_characters\nvar specialCharsRegex = /[.*+?^${}()|[\\]\\\\]/g;\n\n// http://www.ecma-international.org/ecma-262/5.1/#sec-15.10.2.6\nvar wordCharacterRegex = /[a-z0-9_]/i;\n\nvar whitespacesRegex = /\\s+/;\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(specialCharsRegex, '\\\\$&');\n}\n\nmodule.exports = function match(text, query) {\n  text = removeDiacritics(text);\n  query = removeDiacritics(query);\n\n  return (\n    query\n      .trim()\n      .split(whitespacesRegex)\n      // If query is blank, we'll get empty string here, so let's filter it out.\n      .filter(function(word) {\n        return word.length > 0;\n      })\n      .reduce(function(result, word) {\n        var wordLen = word.length;\n        var prefix = wordCharacterRegex.test(word[0]) ? '\\\\b' : '';\n        var regex = new RegExp(prefix + escapeRegexCharacters(word), 'i');\n        var index = text.search(regex);\n\n        if (index > -1) {\n          result.push([index, index + wordLen]);\n\n          // Replace what we just found with spaces so we don't find it again.\n          text =\n            text.slice(0, index) +\n            new Array(wordLen + 1).join(' ') +\n            text.slice(index + wordLen);\n        }\n\n        return result;\n      }, [])\n      .sort(function(match1, match2) {\n        return match1[0] - match2[0];\n      })\n  );\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/autosuggest-highlight/match/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"node_modules/autosuggest-highlight/match/index.js":"var removeDiacritics = require('diacritic').clean;\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_special_characters\nvar specialCharsRegex = /[.*+?^${}()|[\\]\\\\]/g;\n\n// http://www.ecma-international.org/ecma-262/5.1/#sec-15.10.2.6\nvar wordCharacterRegex = /[a-z0-9_]/i;\n\nvar whitespacesRegex = /\\s+/;\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(specialCharsRegex, '\\\\$&');\n}\n\nmodule.exports = function match(text, query) {\n  text = removeDiacritics(text);\n  query = removeDiacritics(query);\n\n  return (\n    query\n      .trim()\n      .split(whitespacesRegex)\n      // If query is blank, we'll get empty string here, so let's filter it out.\n      .filter(function(word) {\n        return word.length > 0;\n      })\n      .reduce(function(result, word) {\n        var wordLen = word.length;\n        var prefix = wordCharacterRegex.test(word[0]) ? '\\\\b' : '';\n        var regex = new RegExp(prefix + escapeRegexCharacters(word), 'i');\n        var index = text.search(regex);\n\n        if (index > -1) {\n          result.push([index, index + wordLen]);\n\n          // Replace what we just found with spaces so we don't find it again.\n          text =\n            text.slice(0, index) +\n            new Array(wordLen + 1).join(' ') +\n            text.slice(index + wordLen);\n        }\n\n        return result;\n      }, [])\n      .sort(function(match1, match2) {\n        return match1[0] - match2[0];\n      })\n  );\n};\n"},"lineCount":50}},"error":null,"hash":"e8d84d843f9fffd9b4c8a7cef35c3282","cacheData":{"env":{}}}