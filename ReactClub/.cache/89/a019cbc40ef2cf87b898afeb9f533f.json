{"id":"node_modules/jsonexport/dist/parser/csv.js","dependencies":[{"name":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/package.json","includedInParent":true,"mtime":1594394960386},{"name":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/package.json","includedInParent":true,"mtime":1594347584258},{"name":"../core/eol","loc":{"line":12,"column":18},"parent":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/parser/csv.js","resolved":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/core/eol.js"},{"name":"../core/join-rows","loc":{"line":13,"column":23},"parent":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/parser/csv.js","resolved":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/core/join-rows.js"},{"name":"./handler","loc":{"line":14,"column":22},"parent":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/parser/csv.js","resolved":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/parser/handler.js"},{"name":"../core/helper","loc":{"line":15,"column":21},"parent":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/parser/csv.js","resolved":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/core/helper.js"},{"name":"../core/escape-delimiters","loc":{"line":24,"column":27},"parent":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/parser/csv.js","resolved":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/dist/core/escape-delimiters.js"}],"generated":{"js":"/* jshint node:true */\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EOL = require('../core/eol');\nvar joinRows = require('../core/join-rows');\nvar Handler = require('./handler');\nvar helper = require('../core/helper');\n\nvar Parser = function () {\n  function Parser(options) {\n    _classCallCheck(this, Parser);\n\n    this._options = this._parseOptions(options) || {};\n    this._handler = new Handler(this._options);\n    this._headers = this._options.headers || [];\n    this._escape = require('../core/escape-delimiters')(this._options.textDelimiter, this._options.rowDelimiter, this._options.forceTextDelimiter);\n  }\n\n  /**\n   * Generates a CSV file with optional headers based on the passed JSON,\n   * with can be an Object or Array.\n   *\n   * @param {Object|Array} json\n   * @param {Function} done(err,csv) - Callback function\n   *      if error, returning error in call back.\n   *      if csv is created successfully, returning csv output to callback.\n   */\n\n\n  _createClass(Parser, [{\n    key: 'parse',\n    value: function parse(json, done, stream) {\n      if (helper.isArray(json)) return done(null, this._parseArray(json, stream));else if (helper.isObject(json)) return done(null, this._parseObject(json));\n      return done(new Error('Unable to parse the JSON object, its not an Array or Object.'));\n    }\n  }, {\n    key: '_checkRows',\n    value: function _checkRows(rows) {\n      var lastRow = null;\n      var finalRows = [];\n      var fillGaps = function fillGaps(col, index) {\n        return col === '' || col === undefined ? lastRow[index] : col;\n      };\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n\n          var missing = this._headers.length - row.length;\n          if (missing > 0) row = row.concat(Array(missing).join(\".\").split(\".\"));\n          if (lastRow && this._options.fillGaps) row = row.map(fillGaps);\n          finalRows.push(row.join(this._options.rowDelimiter));\n          lastRow = row;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return finalRows;\n    }\n  }, {\n    key: '_parseArray',\n    value: function _parseArray(json, stream) {\n      var self = this;\n      this._headers = this._headers || [];\n      var fileRows = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n\n      var getHeaderIndex = function getHeaderIndex(header) {\n        var index = self._headers.indexOf(header);\n        if (index === -1) {\n          self._headers.push(header);\n          index = self._headers.indexOf(header);\n        }\n        return index;\n      };\n\n      //Generate the csv output\n      fillRows = function fillRows(result) {\n        //Initialize the array with empty strings to handle 'unpopular' headers\n        var resultRows = [Array(self._headers.length).join(\".\").split(\".\")];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = result[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var element = _step2.value;\n\n            var elementHeaderIndex = getHeaderIndex(element.item);\n            var placed = false;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = resultRows[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var row = _step3.value;\n\n                if (!placed && row[elementHeaderIndex] === '' || row[elementHeaderIndex] === undefined) {\n                  row[elementHeaderIndex] = self._escape(element.value);\n                  placed = true;\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            if (!placed) {\n              var newRow = Array(self._headers.length).join(\".\").split(\".\");\n              newRow[elementHeaderIndex] = self._escape(element.value);\n              resultRows.push(newRow);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        fileRows = fileRows.concat(self._checkRows(resultRows));\n      };\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = json[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          //Call checkType to list all items inside this object\n          //Items are returned as a object {item: 'Prop Value, Item Name', value: 'Prop Data Value'}\n          var itemResult = self._handler.check(item, self._options.mainPathItem, item, json);\n          fillRows(itemResult);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (!stream && self._options.includeHeaders) {\n        //Add the headers to the first line\n        fileRows.unshift(this.headers);\n      }\n\n      return joinRows(fileRows, self._options.endOfLine);\n    }\n  }, {\n    key: '_parseObject',\n    value: function _parseObject(json) {\n      var self = this;\n      var fileRows = [];\n      var parseResult = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n      var horizontalRows = [[], []];\n\n      fillRows = function fillRows(result) {\n        var value = result.value ? result.value.toString() : self._options.undefinedString;\n        value = self._escape(value);\n\n        //Type header;value\n        if (self._options.verticalOutput) {\n          var row = [result.item, value];\n          fileRows.push(row.join(self._options.rowDelimiter));\n        } else {\n          horizontalRows[0].push(result.item);\n          horizontalRows[1].push(value);\n        }\n      };\n      for (var prop in json) {\n        var prefix = \"\";\n        if (this._options.mainPathItem) prefix = this._options.mainPathItem + this._options.headerPathString;\n        parseResult = this._handler.check(json[prop], prefix + prop, prop, json);\n\n        parseResult.forEach(fillRows);\n      }\n      if (!this._options.verticalOutput) {\n        fileRows.push(horizontalRows[0].join(this._options.rowDelimiter));\n        fileRows.push(horizontalRows[1].join(this._options.rowDelimiter));\n      }\n      return joinRows(fileRows, this._options.endOfLine);\n    }\n\n    /**\n     * Replaces the default options with the custom user options\n     *\n     * @param {Options} userOptions\n     */\n\n  }, {\n    key: '_parseOptions',\n    value: function _parseOptions(userOptions) {\n      var defaultOptions = {\n        headers: [], //              Array\n        rename: [], //               Array\n        headerPathString: '.', //    String\n        rowDelimiter: ',', //        String\n        textDelimiter: '\"', //       String\n        arrayPathString: ';', //     String\n        undefinedString: '', //      String\n        endOfLine: EOL || '\\n', //   String\n        mainPathItem: null, //       String\n        booleanTrueString: null, //  String\n        booleanFalseString: null, // String\n        includeHeaders: true, //     Boolean\n        fillGaps: false, //          Boolean\n        verticalOutput: true, //     Boolean\n        forceTextDelimiter: false, //Boolean\n        //Handlers\n        handleString: undefined, //  Function\n        handleNumber: undefined, //  Function\n        handleBoolean: undefined, // Function\n        handleDate: undefined //    Function\n      };\n      return Object.assign({}, defaultOptions, userOptions);\n    }\n  }, {\n    key: 'headers',\n    get: function get() {\n      var _this = this;\n\n      var headers = this._headers;\n\n      if (this._options.rename && this._options.rename.length > 0) headers = headers.map(function (header) {\n        return _this._options.rename[_this._options.headers.indexOf(header)] || header;\n      });\n\n      if (this._options.forceTextDelimiter) {\n        headers = headers.map(function (header) {\n          return '' + _this._options.textDelimiter + header + _this._options.textDelimiter;\n        });\n      }\n\n      if (this._options.mapHeaders) headers = headers.map(this._options.mapHeaders);\n\n      return headers.join(this._options.rowDelimiter);\n    }\n  }]);\n\n  return Parser;\n}();\n\nmodule.exports = Parser;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/jsonexport/dist/parser/csv.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}}],"sources":{"node_modules/jsonexport/dist/parser/csv.js":"/* jshint node:true */\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EOL = require('../core/eol');\nvar joinRows = require('../core/join-rows');\nvar Handler = require('./handler');\nvar helper = require('../core/helper');\n\nvar Parser = function () {\n  function Parser(options) {\n    _classCallCheck(this, Parser);\n\n    this._options = this._parseOptions(options) || {};\n    this._handler = new Handler(this._options);\n    this._headers = this._options.headers || [];\n    this._escape = require('../core/escape-delimiters')(this._options.textDelimiter, this._options.rowDelimiter, this._options.forceTextDelimiter);\n  }\n\n  /**\n   * Generates a CSV file with optional headers based on the passed JSON,\n   * with can be an Object or Array.\n   *\n   * @param {Object|Array} json\n   * @param {Function} done(err,csv) - Callback function\n   *      if error, returning error in call back.\n   *      if csv is created successfully, returning csv output to callback.\n   */\n\n\n  _createClass(Parser, [{\n    key: 'parse',\n    value: function parse(json, done, stream) {\n      if (helper.isArray(json)) return done(null, this._parseArray(json, stream));else if (helper.isObject(json)) return done(null, this._parseObject(json));\n      return done(new Error('Unable to parse the JSON object, its not an Array or Object.'));\n    }\n  }, {\n    key: '_checkRows',\n    value: function _checkRows(rows) {\n      var lastRow = null;\n      var finalRows = [];\n      var fillGaps = function fillGaps(col, index) {\n        return col === '' || col === undefined ? lastRow[index] : col;\n      };\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n\n          var missing = this._headers.length - row.length;\n          if (missing > 0) row = row.concat(Array(missing).join(\".\").split(\".\"));\n          if (lastRow && this._options.fillGaps) row = row.map(fillGaps);\n          finalRows.push(row.join(this._options.rowDelimiter));\n          lastRow = row;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return finalRows;\n    }\n  }, {\n    key: '_parseArray',\n    value: function _parseArray(json, stream) {\n      var self = this;\n      this._headers = this._headers || [];\n      var fileRows = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n\n      var getHeaderIndex = function getHeaderIndex(header) {\n        var index = self._headers.indexOf(header);\n        if (index === -1) {\n          self._headers.push(header);\n          index = self._headers.indexOf(header);\n        }\n        return index;\n      };\n\n      //Generate the csv output\n      fillRows = function fillRows(result) {\n        //Initialize the array with empty strings to handle 'unpopular' headers\n        var resultRows = [Array(self._headers.length).join(\".\").split(\".\")];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = result[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var element = _step2.value;\n\n            var elementHeaderIndex = getHeaderIndex(element.item);\n            var placed = false;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = resultRows[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var row = _step3.value;\n\n                if (!placed && row[elementHeaderIndex] === '' || row[elementHeaderIndex] === undefined) {\n                  row[elementHeaderIndex] = self._escape(element.value);\n                  placed = true;\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            if (!placed) {\n              var newRow = Array(self._headers.length).join(\".\").split(\".\");\n              newRow[elementHeaderIndex] = self._escape(element.value);\n              resultRows.push(newRow);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        fileRows = fileRows.concat(self._checkRows(resultRows));\n      };\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = json[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          //Call checkType to list all items inside this object\n          //Items are returned as a object {item: 'Prop Value, Item Name', value: 'Prop Data Value'}\n          var itemResult = self._handler.check(item, self._options.mainPathItem, item, json);\n          fillRows(itemResult);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (!stream && self._options.includeHeaders) {\n        //Add the headers to the first line\n        fileRows.unshift(this.headers);\n      }\n\n      return joinRows(fileRows, self._options.endOfLine);\n    }\n  }, {\n    key: '_parseObject',\n    value: function _parseObject(json) {\n      var self = this;\n      var fileRows = [];\n      var parseResult = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n      var horizontalRows = [[], []];\n\n      fillRows = function fillRows(result) {\n        var value = result.value ? result.value.toString() : self._options.undefinedString;\n        value = self._escape(value);\n\n        //Type header;value\n        if (self._options.verticalOutput) {\n          var row = [result.item, value];\n          fileRows.push(row.join(self._options.rowDelimiter));\n        } else {\n          horizontalRows[0].push(result.item);\n          horizontalRows[1].push(value);\n        }\n      };\n      for (var prop in json) {\n        var prefix = \"\";\n        if (this._options.mainPathItem) prefix = this._options.mainPathItem + this._options.headerPathString;\n        parseResult = this._handler.check(json[prop], prefix + prop, prop, json);\n\n        parseResult.forEach(fillRows);\n      }\n      if (!this._options.verticalOutput) {\n        fileRows.push(horizontalRows[0].join(this._options.rowDelimiter));\n        fileRows.push(horizontalRows[1].join(this._options.rowDelimiter));\n      }\n      return joinRows(fileRows, this._options.endOfLine);\n    }\n\n    /**\n     * Replaces the default options with the custom user options\n     *\n     * @param {Options} userOptions\n     */\n\n  }, {\n    key: '_parseOptions',\n    value: function _parseOptions(userOptions) {\n      var defaultOptions = {\n        headers: [], //              Array\n        rename: [], //               Array\n        headerPathString: '.', //    String\n        rowDelimiter: ',', //        String\n        textDelimiter: '\"', //       String\n        arrayPathString: ';', //     String\n        undefinedString: '', //      String\n        endOfLine: EOL || '\\n', //   String\n        mainPathItem: null, //       String\n        booleanTrueString: null, //  String\n        booleanFalseString: null, // String\n        includeHeaders: true, //     Boolean\n        fillGaps: false, //          Boolean\n        verticalOutput: true, //     Boolean\n        forceTextDelimiter: false, //Boolean\n        //Handlers\n        handleString: undefined, //  Function\n        handleNumber: undefined, //  Function\n        handleBoolean: undefined, // Function\n        handleDate: undefined //    Function\n      };\n      return Object.assign({}, defaultOptions, userOptions);\n    }\n  }, {\n    key: 'headers',\n    get: function get() {\n      var _this = this;\n\n      var headers = this._headers;\n\n      if (this._options.rename && this._options.rename.length > 0) headers = headers.map(function (header) {\n        return _this._options.rename[_this._options.headers.indexOf(header)] || header;\n      });\n\n      if (this._options.forceTextDelimiter) {\n        headers = headers.map(function (header) {\n          return '' + _this._options.textDelimiter + header + _this._options.textDelimiter;\n        });\n      }\n\n      if (this._options.mapHeaders) headers = headers.map(this._options.mapHeaders);\n\n      return headers.join(this._options.rowDelimiter);\n    }\n  }]);\n\n  return Parser;\n}();\n\nmodule.exports = Parser;"},"lineCount":298}},"error":null,"hash":"83615a6895c1a4e6302d50476162a3c0","cacheData":{"env":{}}}