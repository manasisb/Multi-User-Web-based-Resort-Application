{"id":"node_modules/jsonexport/dist/core/escape-delimiters.js","dependencies":[{"name":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/package.json","includedInParent":true,"mtime":1594394960386},{"name":"/Users/manasiweginwar/Desktop/CSUEB_Manasi/Resort Application/Multi-User-Web-based-Resort-Application/ReactClub/node_modules/jsonexport/package.json","includedInParent":true,"mtime":1594347584258}],"generated":{"js":"/* jshint node:true */\n'use strict';\n\n// Escape the textDelimiters contained in the field\n/*(https://tools.ietf.org/html/rfc4180)\n   7.  If double-quotes are used to enclose fields, then a double-quote\n   appearing inside a field must be escaped by preceding it with\n   another double quote.\n   For example: \"aaa\",\"b\"\"bb\",\"ccc\"\n*/\n\nmodule.exports = function escapedDelimiters(textDelimiter, rowDelimiter, forceTextDelimiter) {\n  var endOfLine = '\\n';\n\n  if (typeof textDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"textDelimiter\", must be a string.');\n  }\n\n  if (typeof rowDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"rowDelimiter\", must be a string.');\n  }\n\n  var textDelimiterRegex = new RegExp(\"\\\\\" + textDelimiter, 'g');\n  var escapedDelimiter = textDelimiter + textDelimiter;\n\n  var enclosingCondition = textDelimiter === '\"' ? function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0 || value.indexOf('\"') >= 0;\n  } : function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0;\n  };\n\n  return function (value) {\n    if (forceTextDelimiter) value = \"\" + value;\n\n    if (!value.replace) return value;\n    // Escape the textDelimiters contained in the field\n    value = value.replace(textDelimiterRegex, escapedDelimiter);\n\n    // Escape the whole field if it contains a rowDelimiter or a linebreak or double quote\n    if (forceTextDelimiter || enclosingCondition(value)) {\n      value = textDelimiter + value + textDelimiter;\n    }\n\n    return value;\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsonexport/dist/core/escape-delimiters.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/jsonexport/dist/core/escape-delimiters.js":"/* jshint node:true */\n'use strict';\n\n// Escape the textDelimiters contained in the field\n/*(https://tools.ietf.org/html/rfc4180)\n   7.  If double-quotes are used to enclose fields, then a double-quote\n   appearing inside a field must be escaped by preceding it with\n   another double quote.\n   For example: \"aaa\",\"b\"\"bb\",\"ccc\"\n*/\n\nmodule.exports = function escapedDelimiters(textDelimiter, rowDelimiter, forceTextDelimiter) {\n  var endOfLine = '\\n';\n\n  if (typeof textDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"textDelimiter\", must be a string.');\n  }\n\n  if (typeof rowDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"rowDelimiter\", must be a string.');\n  }\n\n  var textDelimiterRegex = new RegExp(\"\\\\\" + textDelimiter, 'g');\n  var escapedDelimiter = textDelimiter + textDelimiter;\n\n  var enclosingCondition = textDelimiter === '\"' ? function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0 || value.indexOf('\"') >= 0;\n  } : function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0;\n  };\n\n  return function (value) {\n    if (forceTextDelimiter) value = \"\" + value;\n\n    if (!value.replace) return value;\n    // Escape the textDelimiters contained in the field\n    value = value.replace(textDelimiterRegex, escapedDelimiter);\n\n    // Escape the whole field if it contains a rowDelimiter or a linebreak or double quote\n    if (forceTextDelimiter || enclosingCondition(value)) {\n      value = textDelimiter + value + textDelimiter;\n    }\n\n    return value;\n  };\n};"},"lineCount":46}},"error":null,"hash":"19a297c812ad62c9def774aabbb56622","cacheData":{"env":{}}}